# a product
type Product {
  # id of the product
  id: ID!
  # name of the product
  name: String!
  # description of the product
  description: String!
  # stock keep unit
  sku: String!
  categories: [Category]!
}

input ProductInput {
  name: String!
  sku: String!
  description: String
  categoryIds: [ID]
}

input ProductPageInput {
  first: Int = 10
  after: Int = 1
}

type Category {
  id: ID!
  name: String!
  description: String!
  products: [Product]!
}

type Query {
  allProducts(page: ProductPageInput): [Product!]!
  # find a product by id
  productById(id: Int!): Product!
  # find a product by sku
  productBySku(sku: String!): Product!
  #get all categories
  allCategories: [Category]!
}

type Mutation {
  createProduct(product: ProductInput): Product!
}
